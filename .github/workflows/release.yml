name: Release and Publish to PyPI


on:
  workflow_dispatch:
    inputs:
      version:
        description: 'New version number (format: number.number.number)'
        required: true

jobs:
  release-and-publish:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Validate version number
      run: |
        if ! [[ "${{ github.event.inputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "Version number does not match the format 'number.number.number'"
          exit 1
        fi

    - name: Update VERSION in setup.py
      run: |
        sed -i "s/^VERSION = .*/VERSION = '${{ github.event.inputs.version }}'/" setup.py

    - name: Commit and push
      run: |
        git config --global user.name 'github-actions'
        git config --global user.email 'github-actions@github.com'
        git add setup.py
        git commit -m "Release v${{ github.event.inputs.version }}"
        git push

    - name: Create and push tag
      run: |
        git tag v${{ github.event.inputs.version }}
        git push origin v${{ github.event.inputs.version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.event.inputs.version }}
        release_name: v${{ github.event.inputs.version }}
        draft: false
        prerelease: false

    - name: Build
      run: |
        python setup.py sdist bdist_wheel

    - name: Publish to TestPyPI
      run: |
        python -m twine upload --repository testpypi dist/*
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_TOKEN }}

    - name: Publish to PyPI
      run: |
        twine upload dist/*
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
